{"version":3,"sources":["../src/plugin.js"],"names":["marksPlugin","tree","marskHeaderIndex","hasMarksHeader","marks","list","treeWithMarkIds","children","splice"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;AACO,SAASA,WAAT,GAAuB;AAC5B,SAAOC,IAAI,IAAI;AACb,UAAMC,gBAAgB,GAAG,kCAAqBD,IAArB,CAAzB;AACA,UAAME,cAAc,GAAGD,gBAAgB,KAAK,CAAC,CAA7C;;AACA,QAAI,CAACC,cAAL,EAAqB;AACnB;AACD;;AAED,UAAMC,KAAK,GAAG,uBAAWH,IAAX,CAAd;;AACA,QAAI,CAAC,qBAASG,KAAT,CAAL,EAAsB;AACpB;AACD;;AAED,UAAMC,IAAI,GAAG,4BAAgBD,KAAhB,CAAb;AACA,UAAME,eAAe,GAAG,wBAAYF,KAAZ,EAAmBH,IAAnB,CAAxB;AAEAK,IAAAA,eAAe,CAACC,QAAhB,CAAyBC,MAAzB,CAAgCN,gBAAgB,GAAG,CAAnD,EAAsD,CAAtD,EAAyDG,IAAzD;AACAJ,IAAAA,IAAI,CAACM,QAAL,GAAgBD,eAAe,CAACC,QAAhC;AACD,GAjBD;AAkBD","sourcesContent":["import { findMarksHeaderIndex } from './header'\nimport { parseMarks, hasMarks, createMarksList, withMarkIds } from './marks'\n\n// Remark plugin\nexport function marksPlugin() {\n  return tree => {\n    const marskHeaderIndex = findMarksHeaderIndex(tree)\n    const hasMarksHeader = marskHeaderIndex !== -1\n    if (!hasMarksHeader) {\n      return\n    }\n\n    const marks = parseMarks(tree)\n    if (!hasMarks(marks)) {\n      return\n    }\n\n    const list = createMarksList(marks)\n    const treeWithMarkIds = withMarkIds(marks, tree)\n\n    treeWithMarkIds.children.splice(marskHeaderIndex + 1, 0, list)\n    tree.children = treeWithMarkIds.children\n  }\n}\n"],"file":"plugin.js"}